{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifData.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","components/GifExpertApp.jsx","index.js"],"names":["AddCategory","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","item","type","placeholder","value","onChange","target","getGifData","category","a","url","encodeURI","fetch","response","json","data","getData","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","categorie","setCategorie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAGaA,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAgB7C,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAW,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OACVC,YAAY,YACZC,MAAOV,EACPW,SAjBoB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,a,uBCRdG,EAAU,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAClBC,EADkB,0FACuEC,UAAUH,GADjF,sBAEDI,MAAMF,GAFL,cAElBG,EAFkB,gBAGDA,EAASC,OAHR,uBAGhBC,EAHgB,EAGhBA,KACFC,EAAUD,EAAKE,KAAI,SAAAhB,GAAS,IAAD,EAC/B,MAAO,CACLiB,GAAIjB,EAAKiB,GACTC,MAAOlB,EAAKkB,MACZT,IAAG,UAAET,EAAKmB,cAAP,aAAE,EAAaC,iBAAiBX,QARf,kBAWjBM,GAXiB,4CAAH,sDCEVM,EAAc,SAAC,GAAgB,IAAdF,EAAa,EAAbA,OAC5B,OACE,sBAAKG,UAAU,2BAAf,UACE,qBAAKC,IAAKJ,EAAOV,IAAKe,IAAKL,EAAOD,QAClC,4BAAIC,EAAOD,YCHJO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EACdf,mBAAS,CACjCsB,KAAM,GACNY,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WACRvB,EAAWC,GACRuB,MAAK,SAAAX,GACJY,YAAW,WACTH,EAAS,CACPd,KAAMK,EACNO,SAAS,MAEV,UAEN,CAACnB,IAEGoB,EDhB2BK,CAAazB,GAAjCY,EAFyB,EAE/BL,KAAcY,EAFiB,EAEjBA,QAEtB,OACE,qCACE,6BAAKnB,IACJmB,GAAW,4CACZ,qBAAKJ,UAAU,8CAAf,SACGH,EAAOH,KAAI,SAAAhB,GAAI,OACd,cAAC,EAAD,CAA2BmB,OAAQnB,GAAjBA,EAAKiB,aEclBgB,EAvBM,WACnB,IADyB,EAESzC,mBADf,CAAC,kBADK,mBAElB0C,EAFkB,KAEPC,EAFO,KAQzB,OACE,gCACE,8CACA,cAAC,EAAD,CAAa5C,WAAY4C,IACzB,uBAEA,6BACGD,EAAUlB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAASA,SAAUA,GAAeA,YCf5C6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6f0f68fb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ categories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 0) {\r\n      categories(item => [inputValue, ...item]);\r\n      setInputValue(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\"\r\n        placeholder=\"Buscar...\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  categories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifData = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=nwVhWwSfEfq3Q0DEKZ3vXRbFZFvzFWf2&q=${encodeURI(category)}&limit=10`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  const getData = data.map(item => {\r\n    return {\r\n      id: item.id,\r\n      title: item.title,\r\n      url: item.images?.downsized_medium.url\r\n    }\r\n  });\r\n  return getData;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ images }) => {\r\n  return (\r\n    <div className=\"card animate__backInDown\">\r\n      <img src={images.url} alt={images.title} />\r\n      <p>{images.title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Cargando...</p>}\r\n      <div className=\"grid-card animate__animated animate__bounce\">\r\n        {images.map(item =>\r\n          <GifGridItem key={item.id} images={item} />\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifData } from '../helpers/getGifData';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifData(category)\r\n      .then(images => {\r\n        setTimeout(() => {\r\n          setState({\r\n            data: images,\r\n            loading: false\r\n          })\r\n        }, 3000)\r\n      })\r\n  }, [category])\r\n\r\n  return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const categories = [\"Dragon Ball Z\"];\r\n  const [categorie, setCategorie] = useState(categories);\r\n\r\n  // const handleAddCategorie = () => {\r\n  //   const newCategorie = \"Samurai X\";\r\n  //   setCategorie([...categories, newCategorie])\r\n  // }\r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory categories={setCategorie} />\r\n      <hr />\r\n      {/* <button type=\"button\" onClick={handleAddCategorie}>Agregar</button> */}\r\n      <ol>\r\n        {categorie.map(category =>\r\n          <GifGrid category={category} key={category} />\r\n        )}\r\n      </ol>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GifExpertApp from './components/GifExpertApp';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GifExpertApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}